---
layout: post
title: "3년간의 리모트 개발에 대한 소회"
date: 2019-03-10 02:17:24
author: Reid
categories:
  - engineering
tags:
  - remote
  - engineering
  - cowork
published: true
---

리모트 근무를 시작한지 햇수로 만 3년이 되어갑니다. 지금까지 한번도 이 주제를 공개적으로 이야기해본 적이 없었는데, 블로그의 [about 섹션](../../../../about/)을 작성하다 언급된 김에 생각들을 조금 더 적어볼까 합니다.

> "리모트 근무는 복지가 아니다. 하나의 업무 형태일 뿐이다."

무척이나 신뢰하는 동료이자, 회사의 CTO 였던 분께서 인터뷰를 할 때 자주 했던 말씀입니다. 일주일에 하루 정도의 제한적인 리모트 업무를 허용하던 당시, 입사 지원자 분들이 그것을 마치 회사에서 주는 특혜처럼 여기는 경우가 많았기 때문입니다. 맞습니다. 출, 퇴근의 시간 낭비를 없애고, 다양하고 훌륭한 협업 도구를 이용해 업무 효율을 높이면서 가족과 함께 하는 저녁을 찾는 균형 잡힌 삶. 개발 인프라의 발전을 바탕으로 두 마리 토끼를 모두 잡을 수 있게 된 획기적인 업무 방식일 뿐입니다.

저 역시 아침 저녁으로 지하철의 콩나물 시루가 되지 않아도 되었습니다. 강남의 만이천원짜리 비싼 점심을 반강제로 먹지 않을 수 있었고, 아이들과 함께 저녁 준비하는 아내를 도울 수 있었습니다. 집중이 안될 때는 노트북을 들고 근처 카페로 가서 분위기를 환기시킬 수 있었고, 집중하기 위해 노이즈캔슬링 헤드셋을 사용 할 필요도 없었습니다. 다만 솔직히 회고하자면, 저의 경우는 혜택이라고밖에 할 수 없는 상황이었습니다. 전 직원 중 저 혼자만 리모트로 근무를 했기 때문입니다. 

해외 법인의 스타트업에서 현지 근무를 하다가 회사의 사정으로 불가피하게 한국에서 리모트 근무를 하게 되었습니다. 근무 형태로 리모트를 허용하는 회사를 찾아 입사 지원을 한 것이 아니고, 회사 역시 처음부터 리모트를 염두에 두고 저를 뽑았던 것이 아니었습니다. 애매한 상황이죠. 이후, 국내 법인이 생겨서 서울 사무실이 생겼지만 저는 이미 제주도에 터를 마련한 상황이었기 때문에 리모트 근무를 이어가야 했습니다. 그래서 이 글은 일반적으로 생각 할 수 있는, 회사 주도의 리모트 업무에 대한 소회는 될 수 없을 것 같습니다.

리모트 근무를 할 때, 가장 어려운 문제는 당연하지만 팀원들과의 소통입니다. 리모트 근무자를 위해 주요한 협의는 화상 미팅을 한다고 하더라도, 고개만 돌리면 대화가 시작되는 사무실의 이점은 무시 할 수가 없습니다. [Jira](https://ko.atlassian.com/software/jira), [Slack](https://slack.com/), [WorkFlowy](https://workflowy.com/), [Notion](https://www.notion.so/) 등, 훌륭한 협업 도구들이 이를 지원하지만, 모든 팀원들이 리모트 환경에서 이 도구들을 이용해 소통을 하지 않는 한, 어쩔 수 없이 세어나가는 정보들은 있게 마련입니다. 리모트 개발자는 사무실 팀원들의 업무 속도를 따라가기 위해 더 큰 노력을 해야 합니다. 

그간의 경험을 토대로 나름대로 세가지 리모트 근무자가 갖추어야 할 조건을 정리해 보았습니다.

첫째, 개발이 즐거워야 합니다. 가장 중요하면서도 가장 어려운 일입니다. 즐겁지 않은 일은 어떤 수를 써도 능률이 좋을 수가 없습니다. 뭔가 만드는 것을 좋아하고, 안되는 것을 집요하게 파는 사람, 그러니까 원래부터 개발을 좋아하는 사람이라면 리모트 개발자가 되기 위한 최고의 요건을 이미 갖춘 셈입니다.

둘째, 기획을 앞서갈 정도로 능동적이어야 합니다. 요즘의 트렌드는 프로그래머에게 많은 것을 요구합니다. 단순히 던져 주는 기획을 충실히 구현만 하는 개발자보다는 미리 서비스의 방향을 이해하고 고객의 요구 사항을 예측해야 합니다. 이를 위해서는 팀원들과의 긴밀한 협의가 반드시 필요합니다. 리모트 개발자는 동료들과 점심을 먹으며 앞으로의 구현 방향에 대해 논의 할 수 없다는 점을 깨끗이 인정해야 합니다. 이를 극복하는 방법은 기획을 앞서가는 것입니다. 커피를 사러 스타벅스에서 줄 서는 시간을 아끼는 대신 한 발 앞서서 코드를 작성 해야 합니다. 이후에 기획이 바뀌더라도 이를 우아하게 해결하는 코드를 작성 할 수 있다면 가장 좋겠지요.

셋째, 어떤 채널이든 주저하지 않는 소통 능력을 가져야 합니다. 사람들은 보통 리모트 개발을 생각할 때, 얼굴을 보고 대화하는 화상 회의도 함께 떠올립니다. 물론, 자주 얼굴을 비추는 것이 최소한 얼굴을 까먹지 않게 해주는데 도움은 됩니다만, 팀원들과의 소통은 그것만으로 충분하지 않습니다. 가장 중요한 것은 글로 남기는 것입니다. 개발을 진행하기에 앞서 자신의 개발 방향과 의도를 문서로 남겨야 합니다. 여기서의 문서는 장황한 기획서를 이야기하는 것이 아닙니다. 슬랙 채팅, 지라 이슈의 코멘트, 짤막한 위키 문서, 무엇이든 좋습니다. 소통은 바로 여기서부터 시작되어야 합니다.

만약 이런 준비가 되지 않은 상태에서 리모트를 시도한다면, 생각보다 훨씬 강력한 규칙들을 마련해야 할 것입니다. 출퇴근 도장을 찍는 것 부터 시작해서 기획서를 기다리는 리모트 개발자에게 다른 일을 만들어 던져 줄 관리자가 필요합니다. 새우가 고래를 잡아먹는 상황이죠. 3년이라면 꽤 긴 시간임에도 불구하고, 여전히 리모트는 어렵습니다.

그나저나 능동적이고 소통도 잘하며, 심지어 개발을 좋아하기까지 하는 사람은 어디서 구하나요. 

